broadleaf:
  database:
    provider: jpa
  customer:
    datasource:
      url: 'jdbc:postgresql://localhost:5432/broadleaf?currentSchema=customer'
      username: broadleaf
      password: demo
      hikari:
        maximumPoolSize: 2
    liquibase:
      change-log: 'classpath:/db/changelog/customer.tutorialdata.postgresql.changelog-master.yaml'
      liquibase-schema: public
      default-schema: customer
    reindex:
      startup: true
    useFullName: true
  adminnavigation:
    datasource:
      url: 'jdbc:postgresql://localhost:5432/broadleaf?currentSchema=adminnavigation'
      username: broadleaf
      password: demo
      hikari:
        maximumPoolSize: 2
    liquibase:
      change-log: 'classpath:/db/changelog/adminnavigation.tutorialdata.postgresql.changelog-master.yaml'
      liquibase-schema: public
      default-schema: adminnavigation
      drop-first: 'false'
  adminuser:
    datasource:
      url: 'jdbc:postgresql://localhost:5432/broadleaf?currentSchema=adminuser'
      username: broadleaf
      password: demo
      hikari:
        maximumPoolSize: 2
    liquibase:
      change-log: 'classpath:/db/changelog/adminuser.tutorialdata.postgresql.changelog-master.yaml'
      liquibase-schema: public
      default-schema: adminuser
      drop-first: 'false'
  common:
    data:
      route:
        enabled: true
    policy:
      validation:
        enforce: true
  image:
    availableEffects: 'crop, resize, scale, thumbnail, unsharp'
  metadata:
    datasource:
      url: 'jdbc:postgresql://localhost:5432/broadleaf?currentSchema=metadata'
      username: broadleaf
      password: demo
      hikari:
        maximumPoolSize: 2
    liquibase:
      change-log: 'classpath:/db/changelog/metadata.tutorialdata.postgresql.changelog-master.yaml'
      liquibase-schema: public
      default-schema: metadata
      drop-first: 'false'
  persistence:
    retry:
      developerMode: true
  resource:
    security:
      oauth2:
        defaultAllowAllAnonymous: false
server:
  port: 8447
  servlet:
    context-path: /
  ssl:
    key-password: keypass
    key-store: 'classpath:local.keystore'
    key-store-password: storepass
spring:
  integration:
    jdbc:
      initialize-schema: always
  cloud:
    bus:
      enabled: false
  datasource:
    initialization-mode: never
  jpa:
    hibernate:
      ddl-auto: none
    open-in-view: false
    properties:
      hibernate:
        temp:
          use_jdbc_metadata_defaults: false
    database: postgresql
  messages:
    useCodeAsDefaultMessage: true
  security:
    oauth2:
      client:
        provider:
          catalog:
            token-uri: 'https://localhost:8443/auth/oauth/token'
        registration:
          catalog:
            authorization-grant-type: client_credentials
            client-id: catalog
            client-secret: catalog_secret
  servlet:
    multipart:
      max-file-size: 1MB
      max-request-size: 20MB
      resolve-lazily: true
  thymeleaf:
    cache: false
logging:
  level:
    org:
      apache:
        kafka: WARN